Changelog CML: Color Machine Library


Version 2
---------
- Adapting a more modern code style.



The company Manderim GmbH did close down in 2019 and the author took the code
back to his private collection. On 2021-11-21, the author decided to publish
the whole library into the public domain, refreshing the work until a solid
version will be available to all.



unfinished Version 1.0.3
------------------------
- Reenabled whitePoint for conversions when division by zero occurs.
- Started to rename all API symbols
- Started to work on object structures.
- Added some NALib stuff like allocation functions or macros.
- Work in progress.
- Library is still working but far from complete.

Version 1.0.2
-------------
- Work in progress: Complete overhaul of conversion structure. Code is slightly
  faster. Previous functionality still working but more has been added.
  Not documented and published yet.
- Added Min and Max Bounds for Yupvp (was missing)

Version 1.0.1
-------------
- Added linear-zero extrapolation method and corrected all functions.
- cmlGetIntervalCount is now called cmlGetSampleCount
- Added cmlGetStepSize
- Changed BaseAPI such that conversions from or to Lab and Luv require one less
  parameter. Only CIELAB and CIELUV possible though.
- Changed back the L-response curve of Luv to L Star always.
- Changed some internal function names
- Small bugfixes


Version 1.0
-----------

CML is out of Beta! It is a fully functional C library, tested with a living
application on MacOSX.


Version scheme starting with 1.0:
---------------
Any version 1.X.Y.Z is declared Release.
X denotes the sub version number. Indicates new features and possibly some API
  changes.
Y denotes the subsub version number. Indicates small features, possibly some
  new API and bugfixes.
Z denotes 0 for Release and 1 for Debug.

The eligiblity to upgrade to a higher version for free is not determined by
this scheme but rather more is subject to the decision of the author.




Version 0.9.9.2
---------------
- Some computations do not require a whitePoint anymore
- Radiometry works very stable now.
- Revisited Lab computation. LStar response curve is not f(-x) = -f(x) anymore.
- Correlated Color Temperature is only computed for unknown spectra
- New examples
- CML is now completely in C

Version 0.9.9.1
---------------
- Added radiometric setting
- Slightly changed some APIs
- Added getMaxValue to CMLFunction
- Added getColorType to ColorClasses
- Moved ColorFunctions into StorageClasses
- Changed YUV to Yuv

Version 0.9.9
-------------
- Made ColorMachine into a C like library
- Some classes remaining to convert to C
- Made ColorClasses it's own subset.

Build 0.9.5.2
---------------
- Added fromBuffer converters to all color classes
- Changed colorspace constants to lowercase where desirable.
- added clamp as a virtual method to color classes
- Moved enums and typedefs into its own file

Build 0.9.5.1
---------------
- Added getMinBounds and getMaxBounds
- Added CartesiantoPolar and PolartoCartesian
- Moved NormedConversions into its own files
- Added Normed Cartesian methods.
- Added normed and cartesian input and output methods to all color classes.

Version 0.9.5
-------------
- Reimplemented bodycolor distinction. A SpectralColor now stores one or two
  spectra.
- Added example for spectral colors
- Renamed CMLDefaults to CMLConstants
- Channel bounds of colors are defined in CMLConstants.h

Build 0.9.4.4
-------------
- Added setIlluminatinSpectrum
- Extended the example.
- Added Dirac function
- LUTs are interpolated as intervals.
- Finally made a more maintainable implementation of gray conversions.
- Added defaults
- Creating a machine temporarily sets itself as the global machine.
- Removed integration type as an internal state. Is done again with switch.
- Reimplemented array converters. Easy to use.
- Recomputation-Locks can now be nested
- Functions can now be filtered.
- Spectral to XYZ conversion are much simpler now.
- Removed the colorimetric base. XYZ is now defined to max at 1. Simplifies
  a lot of implementations. Hack with adaptation has been removed.
- Removed the year from the copyright notice

Build 0.9.4.3
-------------
- Introduced debug indication in forth version byte
- Renamed integer mappings
- Reimplemented ArrayFunction and SampleArrayFunction. ArrayFunction much
  faster now.
- Backward LUT responses are now computed with ArrayFunction instead of
  SampleArrayFunction.

Build 0.9.4.2
-------------
- Greatly rearranged input/output methods
- Added integer mapping as a new state with 3 different mappings
- Separated the timer from the example.
- Deleted unused code from example

Build 0.9.4.1
-------------
- Introduced function pointers for certain conversion functions
- Rearrangement of computations, more inline, more in the ColorMachineState
- Removed Array converters again. No real benefit visible yet.

Build 0.9.4
-----------
- Changed more methods to be internal
- Made efforts to inline much more code
- Changed all FromArray and ToArray methods to FromBuffer and ToBuffer
- Added Array converters.
- Changed inverter methods from two parameters to one.
- Bugfixes, Copy-Paste-Errors
- Removed Memoryleaks
- Rearranged file and folder structure
- Obscured all data members of the color machine using ColorMachineState
- Changed the example (incomplete).

Build 0.9.3.1
-------------
- Changed the example to more speed

Version 0.9.3
---------------
- Added YCbCr colors
- Added faster and more accurate integration
- Separated libcmldebug from libcml version
- Removed automatic version output from debug version

Version 0.9.2.4
---------------
- Fixed an overflow bug for CMYK converstions
- Added an output when creating a maching if debug
- Fixed a bug when HSV value was almost zero

Version 0.9.2.3
---------------
- Normalization is set when a predefined illumination is set.

Version 0.9.2.2
---------------
- Made Library compile and run as a dll in windows.
- Introduced visibility for classes.
- Made some additional values const static.

Version 0.9.2.1
---------------
- Removed the Hue orientation count
- Removed the hue orientation strings

Version 0.9.2.0
---------------
- Changed more GREY to GRAY
- Introducing conversion functions to norm range [0, 1]
- Made input/output conversions much simpler
- Made input/output conversions non-static
- Changed ordering of Colors. Yxy is now before Yuv
- Minor symbol renamings

Build 0.9.1.2
-------------
- Added Multiplication with scalar for CMLVec3
- Introducing static ColorMachine::getNumChannels method
- Introducing ColorMachine clamp methods
- Changed CML_COLOR_GREY to CML_COLOR_GRAY
- Added a Changelog


Earlier Versions
----------------
CML originated as a private project during the employment of Tobias Stamm at
Empa Switzerland. Simple conversion functions were combined into a loose
library. After some months of using the loose functions, the idea of a finite
state machine was born and in his private time, Tobias Stamm started to
combine all functions together into one library.

In parallel, the MacOSX application "Color Machine" was created completely in
private to showcase the ability of CML and to validate its implementation.

During that time, the library was part of MBLib, the library of Tobias Stamm.
As the employment at Empa finished, the code was transferred to Manderim, the
company of Tobias Stamm. Here, the code was separated from MBLib and became
its own stand-alone library.

The MacOSX application "Color Machine" now needed to be adjusted to the new
library. As soon as the Application worked again, the library was declared Beta
in the Version 0.9. To sell the library, some more refinements of the library
have been made which resulted in version 0.9.1.2 to be the first public version.



Version scheme:
---------------
Any version 0.X is declared Beta. API changes may occur at any time. As soon
as version 1.0 is introduced, CML is out of Beta and a new version scheme is
introduced.

The eligiblity to upgrade to a higher version for free is not determined by
this scheme but rather more is subject to the decision of the author.


